"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-grid-gallery";
exports.ids = ["vendor-chunks/react-grid-gallery"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-grid-gallery/dist/react-grid-gallery.esm.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-grid-gallery/dist/react-grid-gallery.esm.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CheckButton: () => (/* binding */ CheckButton),\n/* harmony export */   Gallery: () => (/* binding */ Gallery),\n/* harmony export */   buildLayout: () => (/* binding */ buildLayout),\n/* harmony export */   buildLayoutFlat: () => (/* binding */ buildLayoutFlat)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst getStyle = (styleProp, fallback, context) => {\r\n    if (typeof styleProp === \"function\") {\r\n        return styleProp(context);\r\n    }\r\n    if (typeof styleProp === \"object\") {\r\n        return styleProp;\r\n    }\r\n    return fallback(context);\r\n};\r\nconst rotationTransformMap = {\r\n    3: \"rotate(180deg)\",\r\n    2: \"rotateY(180deg)\",\r\n    4: \"rotate(180deg) rotateY(180deg)\",\r\n    5: \"rotate(270deg) rotateY(180deg)\",\r\n    6: \"rotate(90deg)\",\r\n    7: \"rotate(90deg) rotateY(180deg)\",\r\n    8: \"rotate(270deg)\",\r\n};\r\nconst SELECTION_MARGIN = 16;\r\nconst gallery = {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n};\r\nconst thumbnail = ({ item }) => {\r\n    const rotationTransformValue = rotationTransformMap[item.orientation];\r\n    const style = {\r\n        cursor: \"pointer\",\r\n        maxWidth: \"none\",\r\n        width: item.scaledWidth,\r\n        height: item.scaledHeight,\r\n        marginLeft: item.marginLeft,\r\n        marginTop: 0,\r\n        transform: rotationTransformValue,\r\n    };\r\n    if (item.isSelected) {\r\n        const ratio = item.scaledWidth / item.scaledHeight;\r\n        const viewportHeight = item.scaledHeight - SELECTION_MARGIN * 2;\r\n        const viewportWidth = item.viewportWidth - SELECTION_MARGIN * 2;\r\n        let height, width;\r\n        if (item.scaledWidth > item.scaledHeight) {\r\n            width = item.scaledWidth - SELECTION_MARGIN * 2;\r\n            height = Math.floor(width / ratio);\r\n        }\r\n        else {\r\n            height = item.scaledHeight - SELECTION_MARGIN * 2;\r\n            width = Math.floor(height * ratio);\r\n        }\r\n        const marginTop = Math.abs(Math.floor((viewportHeight - height) / 2));\r\n        const marginLeft = Math.abs(Math.floor((viewportWidth - width) / 2));\r\n        style.width = width;\r\n        style.height = height;\r\n        style.marginLeft = marginLeft === 0 ? 0 : -marginLeft;\r\n        style.marginTop = marginTop === 0 ? 0 : -marginTop;\r\n    }\r\n    return style;\r\n};\r\nconst tileViewport = ({ item, }) => {\r\n    const styles = {\r\n        width: item.viewportWidth,\r\n        height: item.scaledHeight,\r\n        overflow: \"hidden\",\r\n    };\r\n    if (item.nano) {\r\n        styles.background = `url(${item.nano})`;\r\n        styles.backgroundSize = \"cover\";\r\n        styles.backgroundPosition = \"center center\";\r\n    }\r\n    if (item.isSelected) {\r\n        styles.width = item.viewportWidth - SELECTION_MARGIN * 2;\r\n        styles.height = item.scaledHeight - SELECTION_MARGIN * 2;\r\n        styles.margin = SELECTION_MARGIN;\r\n    }\r\n    return styles;\r\n};\r\nconst customOverlay = ({ hover, }) => ({\r\n    pointerEvents: \"none\",\r\n    opacity: hover ? 1 : 0,\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n});\r\nconst galleryItem = ({ margin }) => ({\r\n    margin,\r\n    WebkitUserSelect: \"none\",\r\n    position: \"relative\",\r\n    background: \"#eee\",\r\n    padding: \"0px\",\r\n});\r\nconst tileOverlay = ({ showOverlay, }) => ({\r\n    pointerEvents: \"none\",\r\n    opacity: 1,\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    background: showOverlay\r\n        ? \"linear-gradient(to bottom,rgba(0,0,0,0.26),transparent 56px,transparent)\"\r\n        : \"none\",\r\n});\r\nconst tileIconBar = {\r\n    pointerEvents: \"none\",\r\n    opacity: 1,\r\n    position: \"absolute\",\r\n    height: \"36px\",\r\n    width: \"100%\",\r\n};\r\nconst tileDescription = {\r\n    background: \"white\",\r\n    width: \"100%\",\r\n    margin: 0,\r\n    userSelect: \"text\",\r\n    WebkitUserSelect: \"text\",\r\n    MozUserSelect: \"text\",\r\n    overflow: \"hidden\",\r\n};\r\nconst bottomBar = {\r\n    padding: \"2px\",\r\n    pointerEvents: \"none\",\r\n    position: \"absolute\",\r\n    minHeight: \"0px\",\r\n    maxHeight: \"160px\",\r\n    width: \"100%\",\r\n    bottom: \"0px\",\r\n    overflow: \"hidden\",\r\n};\r\nconst tagItemBlock = {\r\n    display: \"inline-block\",\r\n    cursor: \"pointer\",\r\n    pointerEvents: \"visible\",\r\n    margin: \"2px\",\r\n};\r\nconst tagItem = () => ({\r\n    display: \"inline\",\r\n    padding: \".2em .6em .3em\",\r\n    fontSize: \"75%\",\r\n    fontWeight: \"600\",\r\n    lineHeight: \"1\",\r\n    color: \"yellow\",\r\n    background: \"rgba(0,0,0,0.65)\",\r\n    textAlign: \"center\",\r\n    whiteSpace: \"nowrap\",\r\n    verticalAlign: \"baseline\",\r\n    borderRadius: \".25em\",\r\n});\r\nconst checkButton = ({ isVisible, }) => ({\r\n    visibility: isVisible ? \"visible\" : \"hidden\",\r\n    background: \"none\",\r\n    float: \"left\",\r\n    width: 36,\r\n    height: 36,\r\n    border: \"none\",\r\n    padding: 6,\r\n    cursor: \"pointer\",\r\n    pointerEvents: \"visible\",\r\n});\n\nconst CheckButton = ({ isSelected = false, isVisible = true, onClick, color = \"#FFFFFFB2\", selectedColor = \"#4285F4FF\", hoverColor = \"#FFFFFFFF\", }) => {\r\n    const [hover, setHover] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\r\n    const circleStyle = { display: isSelected ? \"block\" : \"none\" };\r\n    const fillColor = isSelected ? selectedColor : hover ? hoverColor : color;\r\n    const handleMouseOver = () => setHover(true);\r\n    const handleMouseOut = () => setHover(false);\r\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { \"data-testid\": \"grid-gallery-item_check-button\", title: \"Select\", style: checkButton({ isVisible }), onClick: onClick, onMouseOver: handleMouseOver, onMouseOut: handleMouseOut, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", { fill: fillColor, height: \"24\", viewBox: \"0 0 24 24\", width: \"24\", xmlns: \"http://www.w3.org/2000/svg\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"radialGradient\", { id: \"shadow\", cx: \"38\", cy: \"95.488\", r: \"10.488\", gradientTransform: \"matrix(1 0 0 -1 -26 109)\", gradientUnits: \"userSpaceOnUse\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"stop\", { offset: \".832\", stopColor: \"#010101\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"stop\", { offset: \"1\", stopColor: \"#010101\", stopOpacity: \"0\" })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\", { style: circleStyle, opacity: \".26\", fill: \"url(#shadow)\", cx: \"12\", cy: \"13.512\", r: \"10.488\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\", { style: circleStyle, fill: \"#FFF\", cx: \"12\", cy: \"12.2\", r: \"8.292\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" })] }) }));\r\n};\n\nconst Image = ({ item, thumbnailImageComponent: ThumbnailImageComponent, isSelectable = true, thumbnailStyle, tagStyle, tileViewportStyle, margin, index, onSelect, onClick, }) => {\r\n    const styleContext = { item };\r\n    const [hover, setHover] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\r\n    const thumbnailProps = {\r\n        key: index,\r\n        \"data-testid\": \"grid-gallery-item_thumbnail\",\r\n        src: item.src,\r\n        alt: item.alt ? item.alt : \"\",\r\n        title: typeof item.caption === \"string\" ? item.caption : null,\r\n        style: getStyle(thumbnailStyle, thumbnail, styleContext),\r\n    };\r\n    const handleCheckButtonClick = (event) => {\r\n        if (!isSelectable) {\r\n            return;\r\n        }\r\n        onSelect(index, event);\r\n    };\r\n    const handleViewportClick = (event) => {\r\n        onClick(index, event);\r\n    };\r\n    const thumbnailImageProps = {\r\n        item,\r\n        index,\r\n        margin,\r\n        onSelect,\r\n        onClick,\r\n        isSelectable,\r\n        tileViewportStyle,\r\n        thumbnailStyle,\r\n        tagStyle,\r\n    };\r\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { className: \"ReactGridGallery_tile\", \"data-testid\": \"grid-gallery-item\", onMouseEnter: () => setHover(true), onMouseLeave: () => setHover(false), style: galleryItem({ margin }), children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"ReactGridGallery_tile-icon-bar\", style: tileIconBar, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CheckButton, { isSelected: item.isSelected, isVisible: item.isSelected || (isSelectable && hover), onClick: handleCheckButtonClick }) }), !!item.tags && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"ReactGridGallery_tile-bottom-bar\", style: bottomBar, children: item.tags.map((tag, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { title: tag.title, style: tagItemBlock, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { style: getStyle(tagStyle, tagItem, styleContext), children: tag.value }) }, tag.key || index))) })), !!item.customOverlay && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"ReactGridGallery_custom-overlay\", style: customOverlay({ hover }), children: item.customOverlay })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"ReactGridGallery_tile-overlay\", style: tileOverlay({\r\n                    showOverlay: hover && !item.isSelected && isSelectable,\r\n                }) }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"ReactGridGallery_tile-viewport\", \"data-testid\": \"grid-gallery-item_viewport\", style: getStyle(tileViewportStyle, tileViewport, styleContext), onClick: handleViewportClick, children: ThumbnailImageComponent ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThumbnailImageComponent, { ...thumbnailImageProps, imageProps: thumbnailProps })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", { ...thumbnailProps })) }), item.thumbnailCaption && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: \"ReactGridGallery_tile-description\", style: tileDescription, children: item.thumbnailCaption }))] }));\r\n};\n\nfunction useContainerWidth(defaultContainerWidth) {\r\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\r\n    const observerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\r\n    const [containerWidth, setContainerWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultContainerWidth);\r\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((node) => {\r\n        var _a;\r\n        (_a = observerRef.current) === null || _a === void 0 ? void 0 : _a.disconnect();\r\n        observerRef.current = undefined;\r\n        ref.current = node;\r\n        const updateWidth = () => {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            let width = ref.current.clientWidth;\r\n            try {\r\n                width = ref.current.getBoundingClientRect().width;\r\n            }\r\n            catch (err) { }\r\n            setContainerWidth(Math.floor(width));\r\n        };\r\n        updateWidth();\r\n        if (node && typeof ResizeObserver !== \"undefined\") {\r\n            observerRef.current = new ResizeObserver(updateWidth);\r\n            observerRef.current.observe(node);\r\n        }\r\n    }, []);\r\n    return { containerRef, containerWidth };\r\n}\n\nconst calculateCutOff = (items, totalRowWidth, protrudingWidth) => {\r\n    const cutOff = [];\r\n    let cutSum = 0;\r\n    for (let i in items) {\r\n        const item = items[i];\r\n        const fractionOfWidth = item.scaledWidth / totalRowWidth;\r\n        cutOff[i] = Math.floor(fractionOfWidth * protrudingWidth);\r\n        cutSum += cutOff[i];\r\n    }\r\n    let stillToCutOff = protrudingWidth - cutSum;\r\n    while (stillToCutOff > 0) {\r\n        for (let i in cutOff) {\r\n            cutOff[i]++;\r\n            stillToCutOff--;\r\n            if (stillToCutOff < 0)\r\n                break;\r\n        }\r\n    }\r\n    return cutOff;\r\n};\r\nconst getRow = (images, { containerWidth, rowHeight, margin }) => {\r\n    const row = [];\r\n    const imgMargin = 2 * margin;\r\n    const items = [...images];\r\n    let totalRowWidth = 0;\r\n    while (items.length > 0 && totalRowWidth < containerWidth) {\r\n        const item = items.shift();\r\n        const scaledWidth = Math.floor(rowHeight * (item.width / item.height));\r\n        const extendedItem = {\r\n            ...item,\r\n            scaledHeight: rowHeight,\r\n            scaledWidth,\r\n            viewportWidth: scaledWidth,\r\n            marginLeft: 0,\r\n        };\r\n        row.push(extendedItem);\r\n        totalRowWidth += extendedItem.scaledWidth + imgMargin;\r\n    }\r\n    const protrudingWidth = totalRowWidth - containerWidth;\r\n    if (row.length > 0 && protrudingWidth > 0) {\r\n        const cutoff = calculateCutOff(row, totalRowWidth, protrudingWidth);\r\n        for (const i in row) {\r\n            const pixelsToRemove = cutoff[i];\r\n            const item = row[i];\r\n            item.marginLeft = -Math.abs(Math.floor(pixelsToRemove / 2));\r\n            item.viewportWidth = item.scaledWidth - pixelsToRemove;\r\n        }\r\n    }\r\n    return [row, items];\r\n};\r\nconst getRows = (images, options, rows = []) => {\r\n    const [row, imagesLeft] = getRow(images, options);\r\n    const nextRows = [...rows, row];\r\n    if (options.maxRows && nextRows.length >= options.maxRows) {\r\n        return nextRows;\r\n    }\r\n    if (imagesLeft.length) {\r\n        return getRows(imagesLeft, options, nextRows);\r\n    }\r\n    return nextRows;\r\n};\r\nconst buildLayout = (images, { containerWidth, maxRows, rowHeight, margin }) => {\r\n    rowHeight = typeof rowHeight === \"undefined\" ? 180 : rowHeight;\r\n    margin = typeof margin === \"undefined\" ? 2 : margin;\r\n    if (!images)\r\n        return [];\r\n    if (!containerWidth)\r\n        return [];\r\n    const options = { containerWidth, maxRows, rowHeight, margin };\r\n    return getRows(images, options);\r\n};\r\nconst buildLayoutFlat = (images, options) => {\r\n    const rows = buildLayout(images, options);\r\n    return [].concat.apply([], rows);\r\n};\n\nconst Gallery = ({ images, id = \"ReactGridGallery\", enableImageSelection = true, onSelect = () => { }, rowHeight = 180, maxRows, margin = 2, defaultContainerWidth = 0, onClick = () => { }, tileViewportStyle, thumbnailStyle, tagStyle, thumbnailImageComponent, }) => {\r\n    const { containerRef, containerWidth } = useContainerWidth(defaultContainerWidth);\r\n    const thumbnails = buildLayoutFlat(images, {\r\n        containerWidth,\r\n        maxRows,\r\n        rowHeight,\r\n        margin,\r\n    });\r\n    const handleSelect = (index, event) => {\r\n        event.preventDefault();\r\n        onSelect(index, images[index], event);\r\n    };\r\n    const handleClick = (index, event) => {\r\n        onClick(index, images[index], event);\r\n    };\r\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { id: id, className: \"ReactGridGallery\", ref: containerRef, children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: gallery, children: thumbnails.map((item, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Image, { item: item, index: index, margin: margin, height: rowHeight, isSelectable: enableImageSelection, onClick: handleClick, onSelect: handleSelect, tagStyle: tagStyle, tileViewportStyle: tileViewportStyle, thumbnailStyle: thumbnailStyle, thumbnailImageComponent: thumbnailImageComponent }, item.key || index))) }) }));\r\n};\r\nGallery.displayName = \"Gallery\";\n\n\n//# sourceMappingURL=react-grid-gallery.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-grid-gallery/dist/react-grid-gallery.esm.js\n");

/***/ })

};
;